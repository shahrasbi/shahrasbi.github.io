---
---

@string{STOC = {Proceedings of the ACM Symposium on Theory of Computing (STOC)}}
@String{SODA = {Proceedings of the ACM-SIAM Symposium on Discrete Algorithms (SODA)}}
@String{ICALP = {Proceedings of the International Conference on Automata, Languages, and Programming (ICALP)}}
@String{ISIT = {Proceedings of the IEEE International Symposium on Information Theory (ISIT)}}
@string{aps = {American Physical Society,}}

@inproceedings{haeupler2017synchronization,
  title={Synchronization Strings: Codes for Insertions and Deletions Approaching the {Singleton} Bound},
  abstract={We introduce <i>synchronization strings</i> as a novel way of efficiently dealing
with synchronization errors, i.e., insertions and deletions. Synchronization
errors are strictly more general and much harder to deal with than commonly
considered half-errors, i.e., symbol corruptions and erasures. For every
\(\epsilon&gt;0\), synchronization strings allow to index a sequence with an
\(\epsilon\)<sup>\({-O(1)}\)</sup>&nbsp;size alphabet such that one can efficiently transform \(k\)&nbsp;
 synchronization errors into \((1+\epsilon)k\)&nbsp;half-errors. This powerful new
technique has many applications. In this paper, we focus on designing insdel
codes, i.e., error correcting block codes (ECCs) for insertion deletion
channels.
<br />While ECCs for both half-errors and synchronization errors have been
intensely studied, the later has largely resisted progress. Indeed, it took
until 1999 for the first insdel codes with constant rate, constant distance,
and constant alphabet size to be constructed by Schulman and Zuckerman. Insdel
codes for asymptotically large or small noise rates were given in 2016 by
Guruswami et al. but these codes are still polynomially far from the optimal
rate-distance tradeoff. This makes the understanding of insdel codes up to this
work equivalent to what was known for regular ECCs after Forney introduced
concatenated codes in his doctoral thesis 50 years ago.
<br />A direct application of our synchronization strings based indexing method
gives a simple black-box construction which transforms any ECC into an equally
efficient insdel code with a slightly larger alphabet size. This instantly
transfers much of the highly developed understanding for regular ECCs over
large constant alphabets into the realm of insdel codes. Most notably, we
obtain efficient insdel codes which get arbitrarily close to the optimal
rate-distance tradeoff given by the Singleton bound for the complete noise
spectrum.},
  author={Haeupler, B. and Shahrasbi, A.},
  booktitle=STOC,
  pages     = {33--46},
  year={2017},
  abbr={STOC},
  pdf={https://arxiv.org/pdf/1704.00807.pdf}
}

@inproceedings{haeupler2017synchronization3,
  title={Synchronization Strings: Explicit Constructions, Local Decoding, and Applications},
  author={Haeupler, B. and Shahrasbi, A.},
  booktitle=STOC,
  pages     = {841--854},
  year={2018},
  abbr={STOC}
}

@inproceedings{haeupler2018synchronization4,
  title={Synchronization Strings: List Decoding for Insertions and Deletions},
  author={Haeupler, B. and Shahrasbi, A. and Sudan, M.},
  booktitle=ICALP,
  year={2018},
  abbr={ICALP}
}

@inproceedings{cheng2018synchronization,
  title={Synchronization Strings: Highly Efficient Deterministic Constructions over Small Alphabets},
  author={Cheng, K. and Haeupler, B. and Li, X. and Shahrasbi, A. and Wu, K.},
  booktitle=SODA,
pages     = {2185--2204},
  year={2019},
  abbr={SODA}
}

@inproceedings{haeupler2017synchronization2,
  author={Haeupler, B. and Shahrasbi, A. and Vitercik, E.},
  title     = {Synchronization Strings: Channel Simulations and Interactive Coding for Insertions and Deletions},
  booktitle = ICALP,
  pages     = {75:1--75:14},
  year      = {2018},
  abbr={ICALP}
}

@inproceedings{haeupler2019near,
  title={Near-Linear Time Insertion-Deletion Codes and (1+\(\varepsilon\))-Approximating Edit Distance via Indexing},
  author={Haeupler, B. and Rubinstein, A. and Shahrasbi, A.},
  booktitle=STOC,
  pages     = {697--708},
  year={2019},
  abbr={STOC}
}

@inproceedings{guruswami2019optimally,
  author    = {V. Guruswami and
               Bernhard Haeupler and
               A. Shahrasbi},
  title     = {Optimally Resilient Codes for List-Decoding from Insertions and Deletions},
  booktitle = STOC,
  pages     = {524--537},
  year      = {2020},
  abbr={STOC}
}

@inproceedings{tahmasbi2014critical,
  title={Critical Graphs in Index Coding},
  author={Tahmasbi, M. and Shahrasbi, A. and Gohari, A.},
  booktitle={IEEE International Symposium on Information Theory (ISIT)},
  pages={281--285},
  year={2014},
  organization={IEEE},
  abbr={ISIT}
}

